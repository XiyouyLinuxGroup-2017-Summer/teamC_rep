
暴力剪枝

int book[][];
int visited[][];

void dfs() {
    if() {
        return;
    }

    for() {
        if() {
            visited[][] = false;
            dfs(下一层);
            visited[][] = true;
        }
    }
    
}

图 搜索

没有直观的图,转化为图

0->1->2->3->4

图的存储

邻接表，邻接矩阵

关键字

初始状态
最终状态
条件

自反性

dfs()//A+B

伪代码
dfs() {
    
}

























